{"version":3,"file":"static/js/34.435b66a5.chunk.js","mappings":"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","sources":["webpack://Task-app/./src/components/UI/Button/Button.css?d015","components/UI/Button/Button.js","webpack://Task-app/./src/components/UI/Input/Input.css?035c","components/UI/Input/Input.js","webpack://Task-app/./src/containers/Authecntication/Login/Login.css?fc5d","containers/Authecntication/Login/Login.jsx","shared/updateObject.js","shared/validate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__gr25a\",\"Success\":\"Button_Success__bQa0I\",\"Danger\":\"Button_Danger__A5JK0\"};","import React from 'react';\r\nimport classes from './Button.css'\r\n\r\nexport default function Button(props) {\r\n  return (\r\n    <button className={[classes.Button, classes[props.type]].join(' ')} disabled={!props.disable}> {props.children} </button>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Label\":\"Input_Label__gL+xR\",\"Input\":\"Input_Input__7IJ8I\",\"InputElement\":\"Input_InputElement__X1yVd\",\"Invalid\":\"Input_Invalid__csHbb\",\"textArea\":\"Input_textArea__JyqzH\"};","import React from 'react';\r\nimport classes from './Input.css'\r\n\r\nexport default function Input(props) {\r\n    let input=''\r\n    switch (props.type) {\r\n        case 'text':\r\n            input = <input onChange={props.change} className={classes.Input} {...props.eleconfig} value={props.value} />\r\n            break;\r\n        case 'textarea':\r\n            input= <textarea  onChange={props.change} className={classes.textArea} {...props.eleconfig} value={props.value} />\r\n            break;\r\n        case 'number':\r\n            input = <input onChange={props.change} className={classes.Input} {...props.eleconfig} value={props.value} />\r\n            break;\r\n        case 'select':\r\n            input =( <select  onChange={props.change} className={classes.InputElement} value={props.value}>\r\n                {props.eleconfig.Options.map((option) => {\r\n                     return <option className={classes.Option} key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    })}\r\n            </select> )\r\n            break;\r\n        default:\r\n            input = <input onChange={props.change} className={classes.Input} {...props.eleconfig} value={props.value} />\r\n            break;\r\n    }\r\n  return (\r\n    <div className={classes.Input}>\r\n    <label className={classes.Label}>{props.label}</label>\r\n    {input}\r\n</div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Login_form__e403M\",\"btn\":\"Login_btn__SM8Zy\",\"Error\":\"Login_Error__9YRzi\"};","import React, { Component } from 'react';\r\nimport Input from '../../../components/UI/Input/Input'\r\nimport Button from '../../../components/UI/Button/Button'\r\nimport classes from './Login.css';\r\nimport updateObject from '../../../shared/updateObject'\r\nimport validate from '../../../shared/validate'\r\nimport { connect } from 'react-redux'\r\nimport * as actionCreators from '../../../store/index.js';\r\nimport { Navigate } from 'react-router-dom';\r\nimport Spinner from '../../../components/UI/Spinner/spinner'\r\n\r\n\r\nclass Login extends Component{\r\n    state={\r\n        formdata:{\r\n            email:{\r\n                type:'text',\r\n                eleConfig:{\r\n                    type:'text',\r\n                    placeholder:'johndoe@email.com'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    isemail:true\r\n                },\r\n                valid:false\r\n            },\r\n            password:{\r\n                type:'text',\r\n                eleConfig:{\r\n                    type:'text',\r\n                    placeholder:'password'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    min:5,\r\n                    max:25\r\n                },\r\n                valid:false\r\n            }\r\n        },\r\n        formIsValid:false\r\n    }\r\n\r\n\r\n    submitHandler=(e)=>{\r\n        e.preventDefault();\r\n        const formData={}\r\n        for(let v in this.state.formdata){\r\n            formData[v]=this.state.formdata[v].value\r\n        }\r\n        this.props.login(formData)\r\n    }\r\n\r\n    changeHandler=(e,id)=>{\r\n        let data = updateObject(this.state.formdata,{\r\n            [id]: updateObject(this.state.formdata[id],{\r\n                value:e.target.value,\r\n                valid:validate(e.target.value,this.state.formdata[id].validation)\r\n            })\r\n        })\r\n        \r\n        let validity=true;\r\n        for(let v in this.state.formdata){\r\n            validity = this.state.formdata[v].valid && validity\r\n        }\r\n        this.setState({formdata:data,formIsValid:validity})\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.reset()\r\n    }\r\n\r\n    render(){\r\n        let form=[]\r\n        for(let data in this.state.formdata){\r\n            form.push({\r\n                key:data,\r\n                label:data,\r\n                config:this.state.formdata[data]\r\n        })\r\n        }\r\n\r\n        let redirect = null\r\n\r\n        if(this.props.redirect) redirect=<Navigate to='/' replace />\r\n\r\n        let Component = ( <div className={classes.form}>\r\n        <h1>LOG IN!</h1>\r\n        <p className={classes.Error}>{this.props.error}</p>\r\n          <form onSubmit={(e)=>this.submitHandler(e)}>\r\n          {form.map(value=>{\r\n              return (\r\n                  <Input type={value.config.type}\r\n                  key={value.key}\r\n                  eleconfig={value.config.eleConfig}\r\n                  value={value.config.value}\r\n                  label={value.label}\r\n                  change={(e)=>{this.changeHandler(e,value.key)}} />\r\n              )\r\n          })}\r\n          <Button type='Success' disable={this.state.formIsValid}> LOG IN! </Button>\r\n          </form>\r\n      <p> Don't have a account <span className={classes.btn} onClick={()=>this.props.navigate('/SignUP')} >SIGN Up!</span> </p>\r\n      {redirect}\r\n      </div>\r\n  )\r\n        if(this.props.loading) Component = <Spinner />\r\n\r\n\r\n        return Component\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        loading: state.user.loading,\r\n        error:state.user.error,\r\n        redirect:state.user.redirect\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        login:(params)=>dispatch(actionCreators.login(params)),\r\n        reset:()=>dispatch(actionCreators.Reset())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);","const updateObject=(prevState,newState)=>{\r\n    return {\r\n        ...prevState,\r\n        ...newState\r\n    }\r\n}\r\nexport default  updateObject;","import validator from 'validator';\r\n\r\nconst validate=(value,rule)=>{\r\n    if(rule.required){\r\n        if(value.trim('')==='') return false\r\n    }\r\n\r\n    if(rule.isemail){\r\n        if(!validator.isEmail(value))\r\n        return false\r\n    }\r\n\r\n    if(value.length < rule.min) return false\r\n    else if(value.length>rule.max) return false\r\n\r\n    return true\r\n}\r\n\r\nexport default validate;\r\n"],"names":["Button","props","className","classes","type","join","disabled","disable","children","Input","input","onChange","change","eleconfig","value","Options","map","option","displayValue","label","Login","state","formdata","email","eleConfig","placeholder","validation","required","isemail","valid","password","min","max","formIsValid","submitHandler","e","preventDefault","formData","v","login","changeHandler","id","data","updateObject","target","validate","validity","setState","this","reset","form","push","key","config","redirect","to","replace","Component","error","onSubmit","onClick","navigate","loading","connect","user","dispatch","params","actionCreators","prevState","newState","rule","trim","validator","length"],"sourceRoot":""}