{"version":3,"file":"static/js/842.7e5b1c94.chunk.js","mappings":"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","sources":["webpack://Task-app/./src/components/UI/Button/Button.css?d015","components/UI/Button/Button.js","webpack://Task-app/./src/components/UI/Input/Input.css?035c","components/UI/Input/Input.js","webpack://Task-app/./src/components/UI/Toast/toast.css?5c51","components/UI/Toast/toast.js","webpack://Task-app/./src/containers/Tasks/createTask/createTask.css?067d","containers/Tasks/createTask/createTask.js","shared/updateObject.js","shared/validate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__gr25a\",\"Success\":\"Button_Success__bQa0I\",\"Danger\":\"Button_Danger__A5JK0\"};","import React from 'react';\r\nimport classes from './Button.css'\r\n\r\nexport default function Button(props) {\r\n  return (\r\n    <button className={[classes.Button, classes[props.type]].join(' ')} disabled={!props.disable}> {props.children} </button>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Label\":\"Input_Label__gL+xR\",\"Input\":\"Input_Input__7IJ8I\",\"InputElement\":\"Input_InputElement__X1yVd\",\"Invalid\":\"Input_Invalid__csHbb\",\"textArea\":\"Input_textArea__JyqzH\"};","import React from 'react';\r\nimport classes from './Input.css'\r\n\r\nexport default function Input(props) {\r\n    let input=''\r\n    switch (props.type) {\r\n        case 'text':\r\n            input = <input onChange={props.change} className={classes.Input} {...props.eleconfig} value={props.value} />\r\n            break;\r\n        case 'textarea':\r\n            input= <textarea  onChange={props.change} className={classes.textArea} {...props.eleconfig} value={props.value} />\r\n            break;\r\n        case 'number':\r\n            input = <input onChange={props.change} className={classes.Input} {...props.eleconfig} value={props.value} />\r\n            break;\r\n        case 'select':\r\n            input =( <select  onChange={props.change} className={classes.InputElement} value={props.value}>\r\n                {props.eleconfig.Options.map((option) => {\r\n                     return <option className={classes.Option} key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    })}\r\n            </select> )\r\n            break;\r\n        default:\r\n            input = <input onChange={props.change} className={classes.Input} {...props.eleconfig} value={props.value} />\r\n            break;\r\n    }\r\n  return (\r\n    <div className={classes.Input}>\r\n    <label className={classes.Label}>{props.label}</label>\r\n    {input}\r\n</div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Toast\":\"toast_Toast__7dqUI\"};","import React, { Component } from 'react'\r\nimport classes from './toast.css'\r\n\r\nexport default class toast extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.Toast} style={{transform : this.props.show ? 'translateY(0)':'translateY(-100vh)',opacity:this.props.show?'1':'0' }}>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"createTask_form__10uk5\"};","import React,{useState} from 'react';\r\nimport classes from './createTask.css'\r\nimport Input from '../../../components/UI/Input/Input'\r\nimport Button from '../../../components/UI/Button/Button'\r\nimport Spinner from '../../../components/UI/Spinner/spinner'\r\nimport updateObject from '../../../shared/updateObject'\r\nimport validator from '../../../shared/validate'\r\nimport {connect} from 'react-redux'\r\nimport Toast from '../../../components/UI/Toast/toast';\r\nimport * as actionCreators from '../../../store/index'\r\n\r\nfunction Create(props) {\r\n    const [form,setForm] = useState(\r\n      {\r\n          title:{\r\n            type:'text',\r\n            eleConfig:{\r\n              type:'text',\r\n              placeholder:'Add task',\r\n            },\r\n            value:'',\r\n            validation:{\r\n              required:true\r\n            },\r\n            valid:false\r\n          },\r\n          description:{\r\n            type:'textarea',\r\n            eleConfig:{\r\n              type:'textarea',\r\n              placeholder:'Task description'\r\n            },\r\n            value:'',\r\n            validation:{\r\n              required:true\r\n            },\r\n            valid:false\r\n          },\r\n          complete:{\r\n            type:'select',\r\n            eleConfig:{\r\n              Options:[\r\n                {value:\"True\",displayValue:'True'},\r\n                {value:\"false\",displayValue:'false'},\r\n              ]\r\n            },\r\n            value:'true',\r\n            validation:{},\r\n          valid:true\r\n          }\r\n          }\r\n    )\r\n\r\n    const [validity , setValidity] = useState(false)\r\n    let [hide,setHide] = useState(false)\r\n\r\n\r\n    \r\n\r\n    let forms=[]\r\n    for(let element in form){\r\n      forms.push({\r\n        id: element,\r\n        label:element,\r\n        config: form[element],\r\n      })\r\n    }\r\n\r\n    const submitHandler=(e)=>{\r\n      e.preventDefault();\r\n      let data = {}\r\n      for(let v in form){\r\n        data[v] = form[v].value\r\n      }\r\n      props.saveTask(data)\r\n      setHide(true)\r\n      setTimeout(()=>{\r\n        setHide(false)\r\n      },2000)\r\n    }\r\n\r\n    const changeHanlder=(e,id)=>{\r\n      let data=updateObject(form,{\r\n        [id]:updateObject(form[id],{\r\n        value:e.target.value,\r\n        valid:validator(e.target.value,form[id].validation)\r\n      })\r\n    })\r\n      let isValid = true\r\n\r\n      for(let v in form){\r\n        isValid = form[v].valid && isValid\r\n      }\r\n\r\n      setValidity(isValid)\r\n      setForm(data)\r\n    }\r\n\r\n    let component = (\r\n      <div className={classes.form}>\r\n      <form onSubmit={(e)=>submitHandler(e)}>\r\n        {\r\n          forms.map(element => {\r\n          return (  \r\n              <Input key={element.id}\r\n              type={element.config.type}\r\n              eleconfig={element.config.eleConfig}\r\n              value={element.config.value}\r\n              label={element.label} \r\n              change={(e)=>changeHanlder(e,element.id)} />\r\n            )\r\n          })\r\n        }\r\n        <Button type='Success' disable={validity} >ADD</Button>\r\n      </form>\r\n  </div>\r\n)\r\n\r\n    if(props.loading){\r\n      component = <Spinner />\r\n    }\r\n\r\n    return (\r\n      <>\r\n      <Toast show={hide}>{props.error?'Something Went Wrong!':'Work added Successfully'}</Toast>\r\n      {component}\r\n  \r\n      </>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n  return{\r\n    task: state.task.tasks,\r\n    error: state.task.error,\r\n    loading : state.task.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n  return{\r\n    saveTask:(data)=>dispatch(actionCreators.saveTask(data))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Create)","const updateObject=(prevState,newState)=>{\r\n    return {\r\n        ...prevState,\r\n        ...newState\r\n    }\r\n}\r\nexport default  updateObject;","import validator from 'validator';\r\n\r\nconst validate=(value,rule)=>{\r\n    if(rule.required){\r\n        if(value.trim('')==='') return false\r\n    }\r\n\r\n    if(rule.isemail){\r\n        if(!validator.isEmail(value))\r\n        return false\r\n    }\r\n\r\n    if(value.length < rule.min) return false\r\n    else if(value.length>rule.max) return false\r\n\r\n    return true\r\n}\r\n\r\nexport default validate;\r\n"],"names":["Button","props","className","classes","type","join","disabled","disable","children","Input","input","onChange","change","eleconfig","value","Options","map","option","displayValue","label","toast","style","transform","this","show","opacity","Component","connect","state","task","tasks","error","loading","dispatch","saveTask","data","actionCreators","useState","title","eleConfig","placeholder","validation","required","valid","description","complete","form","setForm","validity","setValidity","hide","setHide","forms","element","push","id","config","component","onSubmit","e","preventDefault","v","setTimeout","submitHandler","updateObject","target","validator","isValid","changeHanlder","prevState","newState","rule","trim","isemail","length","min","max"],"sourceRoot":""}