{"version":3,"file":"static/js/817.2b4351f5.chunk.js","mappings":"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","sources":["webpack://Task-app/./src/components/UI/Button/Button.css?d015","components/UI/Button/Button.js","webpack://Task-app/./src/components/UI/Input/Input.css?035c","components/UI/Input/Input.js","webpack://Task-app/./src/components/UI/Toast/toast.css?5c51","components/UI/Toast/toast.js","webpack://Task-app/./src/containers/Profile/profile.css?4a98","containers/Profile/profile.js","shared/updateObject.js","shared/validate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__gr25a\",\"Success\":\"Button_Success__bQa0I\",\"Danger\":\"Button_Danger__A5JK0\"};","import React from 'react';\r\nimport classes from './Button.css'\r\n\r\nexport default function Button(props) {\r\n  return (\r\n    <button className={[classes.Button, classes[props.type]].join(' ')} disabled={!props.disable}> {props.children} </button>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Label\":\"Input_Label__gL+xR\",\"Input\":\"Input_Input__7IJ8I\",\"InputElement\":\"Input_InputElement__X1yVd\",\"Invalid\":\"Input_Invalid__csHbb\",\"textArea\":\"Input_textArea__JyqzH\"};","import React from 'react';\r\nimport classes from './Input.css'\r\n\r\nexport default function Input(props) {\r\n    let input=''\r\n    switch (props.type) {\r\n        case 'text':\r\n            input = <input onChange={props.change} className={classes.Input} {...props.eleconfig} value={props.value} />\r\n            break;\r\n        case 'textarea':\r\n            input= <textarea  onChange={props.change} className={classes.textArea} {...props.eleconfig} value={props.value} />\r\n            break;\r\n        case 'number':\r\n            input = <input onChange={props.change} className={classes.Input} {...props.eleconfig} value={props.value} />\r\n            break;\r\n        case 'select':\r\n            input =( <select  onChange={props.change} className={classes.InputElement} value={props.value}>\r\n                {props.eleconfig.Options.map((option) => {\r\n                     return <option className={classes.Option} key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    })}\r\n            </select> )\r\n            break;\r\n        default:\r\n            input = <input onChange={props.change} className={classes.Input} {...props.eleconfig} value={props.value} />\r\n            break;\r\n    }\r\n  return (\r\n    <div className={classes.Input}>\r\n    <label className={classes.Label}>{props.label}</label>\r\n    {input}\r\n</div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Toast\":\"toast_Toast__7dqUI\"};","import React, { Component } from 'react'\r\nimport classes from './toast.css'\r\n\r\nexport default class toast extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.Toast} style={{transform : this.props.show ? 'translateY(0)':'translateY(-100vh)',opacity:this.props.show?'1':'0' }}>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"profile_profile__sKiOe\",\"ProfileImg\":\"profile_ProfileImg__pKQ9G\",\"error\":\"profile_error__Nad7B\",\"Button\":\"profile_Button__UNZ6p\",\"form\":\"profile_form__b8+Yy\"};","import React, { Component } from 'react'\r\nimport classes from './profile.css'\r\nimport Input from '../../components/UI/Input/Input';\r\nimport updateObject from '../../shared/updateObject';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport axios from 'axios';\r\nimport Toast from '../../components/UI/Toast/toast';\r\nimport {connect} from 'react-redux'\r\nimport validate from '../../shared/validate'\r\n\r\n\r\nclass profile extends Component {\r\n  state={\r\n    file :'',\r\n    imgsrc : null,\r\n    msg : null , \r\n    formData :{\r\n        name :{\r\n           eleType : 'text',\r\n           eleConfig :{\r\n              type : 'text',\r\n              placeholder : 'John'\r\n           },\r\n           value: '',\r\n           validation :{\r\n            min : 7,\r\n            max : 25\r\n           },\r\n           valid:true,\r\n           changed: false\r\n          \r\n        },\r\n        password:{\r\n          eleType : 'text',\r\n          eleConfig:{\r\n            type : 'text',\r\n            placeholder : 'password'\r\n          },\r\n          value : '',\r\n          validation : {\r\n            min : 7,\r\n            max : 25\r\n          },\r\n          valid:true,\r\n          changed: false\r\n        },\r\n        ConfirmPassword:{\r\n          eleType : 'text',\r\n          eleConfig:{\r\n            type : 'text',\r\n            placeholder : 'confirm password'\r\n          },\r\n          value : '',\r\n          validation : {\r\n            min : 7,\r\n            max : 25\r\n          },\r\n          valid:true,\r\n          changed: false\r\n        }\r\n    } ,\r\n     isValid : false\r\n  }\r\n\r\n  changeHandler = (e , id) =>{\r\n      const updatedForm = updateObject( this.state.formData ,{\r\n           [id] : updateObject(this.state.formData[id] ,{\r\n            value : e.target.value,\r\n            changed:validate(e.target.value,this.state.formData[id].validation)\r\n          })\r\n      } )\r\n      \r\n    let validity=false;\r\n    for(let v in this.state.formData){\r\n        validity = this.state.formData[v].changed || validity\r\n    }\r\n    this.setState({formData:updatedForm,isValid:validity})\r\n  }\r\n\r\n\r\n  ToastHider = ()=>{\r\n    setTimeout(()=>{\r\n      this.setState({msg : null})\r\n    },3000)\r\n  }\r\n\r\n  uploadImage = async () =>{\r\n    const data = new FormData()\r\n    data.append(\"avatar\" , this.state.file )\r\n    axios.post('/users/me/avatar' , data , {\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Authorization' : this.props.token\r\n        }\r\n    })\r\n    .then(res=> {\r\n      this.setState({msg : 'Profile Updated Successfully'}) \r\n      this.ToastHider()\r\n    })    \r\n.catch(err=> this.setState({msg : null}))\r\n  }\r\n\r\n    componentDidMount(){\r\n      axios.get('/users/me/'+this.props.id+'/avatar')\r\n        .then(res=> this.setState({imgsrc:'/users/me/'+this.props.id+'/avatar'}) )\r\n        .catch(err=>this.setState({imgsrc:null}))\r\n\r\n\r\n      axios.get('/users/me',{\r\n        headers:{\r\n          'Authorization': this.props.token\r\n        }\r\n      })\r\n      .then(res=>{\r\n        let newData = null\r\n        for(let v in this.state.formData){\r\n          newData = updateObject(this.state.formData , {\r\n              [v] : updateObject(this.state.formData[v],{\r\n                value : res.data[v]\r\n              })\r\n          })\r\n          break;\r\n        }\r\n        this.setState({formData : newData})\r\n      })\r\n    }\r\n\r\n\r\n    submitHandler = (e)=>{\r\n        e.preventDefault();\r\n        let formData = {}\r\n        for(let v in this.state.formData){\r\n            if(this.state.formData[v].changed )\r\n            formData[v] = this.state.formData[v].value\r\n        }\r\n\r\n        if(formData['password'] !== formData['ConfirmPassword'] ) return this.setState({msg:'Password Must be same!'})\r\n        delete formData['ConfirmPassword']\r\n        axios.patch('/users/update', formData , {\r\n            headers:{\r\n              'Authorization': this.props.token\r\n            }\r\n        })\r\n        .then(res=> {\r\n          this.setState({msg : 'Profile Updated Successfully'}) \r\n          this.ToastHider()\r\n    })\r\n        .catch(err=> this.setState({msg : null}))\r\n        \r\n    }\r\n\r\n  render() {\r\n    let data =[]\r\n    for(let v in this.state.formData){\r\n      data.push({\r\n          key : v,\r\n          title : v,\r\n          config : this.state.formData[v]\r\n      })\r\n    }\r\n\r\n    const imagePreviwer = (e) =>{\r\n      if(e.target.files[0].size > 1048576 ){\r\n        this.setState({error:'Image size is too large max size is 1mb' , imgsrc : null })\r\n        return \r\n      }\r\n\r\n      this.setState({imgsrc : URL.createObjectURL(e.target.files[0]) , file : e.target.files[0] })\r\n  }\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <Toast show = {this.state.msg} > {this.state.msg? this.state.msg : 'Something Went Wrong' } </Toast>\r\n        <div className={classes.profile}>\r\n            <div className={classes.error}>{this.state.error}</div>\r\n          <div className={classes.ProfileImg}>\r\n            <img src={this.state.imgsrc ?  this.state.imgsrc : null   } alt=\"Upload img here\" id={'ImageFile'} />\r\n            <input type=\"file\" onChange = { (e)=>imagePreviwer(e) } />\r\n            <button className={classes.Button} onClick={this.uploadImage} disabled={this.state.imgsrc === null} > upload </button>\r\n          </div>\r\n\r\n          <form className = {classes.form} onSubmit={(e)=>this.submitHandler(e)}>\r\n            {\r\n              data.map(value=>{\r\n                return(\r\n                <Input \r\n                  key={value.key}\r\n                  type={value.config.eleType}\r\n                  eleconfig = {value.config.eleConfig}\r\n                  value = {value.config.value}\r\n                  label = {value.title}\r\n                  change = { (e)=>this.changeHandler(e , value.title ) }\r\n                />\r\n                )})\r\n            }\r\n            <Button type='Success' className={classes.Btn} disable={this.state.isValid} > Update </Button>\r\n          </form>\r\n    \r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n  return{\r\n    token : state.user.token,\r\n    id:state.user.id\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(profile);","const updateObject=(prevState,newState)=>{\r\n    return {\r\n        ...prevState,\r\n        ...newState\r\n    }\r\n}\r\nexport default  updateObject;","import validator from 'validator';\r\n\r\nconst validate=(value,rule)=>{\r\n    if(rule.required){\r\n        if(value.trim('')==='') return false\r\n    }\r\n\r\n    if(rule.isemail){\r\n        if(!validator.isEmail(value))\r\n        return false\r\n    }\r\n\r\n    if(value.length < rule.min) return false\r\n    else if(value.length>rule.max) return false\r\n\r\n    return true\r\n}\r\n\r\nexport default validate;\r\n"],"names":["Button","props","className","classes","type","join","disabled","disable","children","Input","input","onChange","change","eleconfig","value","Options","map","option","displayValue","label","toast","style","transform","this","show","opacity","Component","profile","state","file","imgsrc","msg","formData","name","eleType","eleConfig","placeholder","validation","min","max","valid","changed","password","ConfirmPassword","isValid","changeHandler","e","id","updatedForm","updateObject","target","validate","validity","v","setState","ToastHider","setTimeout","uploadImage","data","FormData","append","axios","headers","token","then","res","catch","err","submitHandler","preventDefault","newData","push","key","title","config","error","src","alt","files","size","URL","createObjectURL","imagePreviwer","onClick","onSubmit","connect","user","prevState","newState","rule","required","trim","isemail","validator","length"],"sourceRoot":""}