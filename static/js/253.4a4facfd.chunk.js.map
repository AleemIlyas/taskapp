{"version":3,"file":"static/js/253.4a4facfd.chunk.js","mappings":"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","sources":["webpack://Task-app/./src/components/UI/Button/Button.css?d015","components/UI/Button/Button.js","webpack://Task-app/./src/components/UI/Input/Input.css?035c","components/UI/Input/Input.js","webpack://Task-app/./src/containers/Authecntication/SignUP/SignUP.css?1f29","containers/Authecntication/SignUP/SingUP.js","shared/updateObject.js","shared/validate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__gr25a\",\"Success\":\"Button_Success__bQa0I\",\"Danger\":\"Button_Danger__A5JK0\"};","import React from 'react';\r\nimport classes from './Button.css'\r\n\r\nexport default function Button(props) {\r\n  return (\r\n    <button className={[classes.Button, classes[props.type]].join(' ')} disabled={!props.disable}> {props.children} </button>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Label\":\"Input_Label__gL+xR\",\"Input\":\"Input_Input__7IJ8I\",\"InputElement\":\"Input_InputElement__X1yVd\",\"Invalid\":\"Input_Invalid__csHbb\",\"textArea\":\"Input_textArea__JyqzH\"};","import React from 'react';\r\nimport classes from './Input.css'\r\n\r\nexport default function Input(props) {\r\n    let input=''\r\n    switch (props.type) {\r\n        case 'text':\r\n            input = <input onChange={props.change} className={classes.Input} {...props.eleconfig} value={props.value} />\r\n            break;\r\n        case 'textarea':\r\n            input= <textarea  onChange={props.change} className={classes.textArea} {...props.eleconfig} value={props.value} />\r\n            break;\r\n        case 'number':\r\n            input = <input onChange={props.change} className={classes.Input} {...props.eleconfig} value={props.value} />\r\n            break;\r\n        case 'select':\r\n            input =( <select  onChange={props.change} className={classes.InputElement} value={props.value}>\r\n                {props.eleconfig.Options.map((option) => {\r\n                     return <option className={classes.Option} key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    })}\r\n            </select> )\r\n            break;\r\n        default:\r\n            input = <input onChange={props.change} className={classes.Input} {...props.eleconfig} value={props.value} />\r\n            break;\r\n    }\r\n  return (\r\n    <div className={classes.Input}>\r\n    <label className={classes.Label}>{props.label}</label>\r\n    {input}\r\n</div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SignUP_form__tcxz2\",\"btn\":\"SignUP_btn__nWD7z\",\"Error\":\"SignUP_Error__0ZuY8\"};","import React, { Component } from 'react';\r\nimport Input from '../../../components/UI/Input/Input'\r\nimport Button from '../../../components/UI/Button/Button'\r\nimport classes from './SignUP.css';\r\nimport updateObject from '../../../shared/updateObject';\r\nimport validate from '../../../shared/validate';\r\nimport Spinner from '../../../components/UI/Spinner/spinner';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom'\r\nimport * as actionCreators from '../../../store/index.js';\r\n\r\n\r\nclass SignUP extends Component{\r\n    state={\r\n        formdata:{\r\n            name:{\r\n                type:'text',\r\n                eleConfig:{\r\n                    type:'text',\r\n                    placeholder:'johndoe'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    min:7,\r\n                    max:25\r\n                },\r\n                valid:false\r\n            },\r\n            email:{\r\n                type:'text',\r\n                eleConfig:{\r\n                    type:'text',\r\n                    placeholder:'johndoe@email.com'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    isemail:true\r\n                },\r\n                valid:false\r\n            },\r\n            age:{\r\n                type:'number',\r\n                eleConfig:{\r\n                    type:'number',\r\n                    placeholder:'age'\r\n                },\r\n                value:'' ,\r\n                validation:{\r\n                    required:true,\r\n                    min:2,\r\n                    max:2\r\n                },\r\n                valid:false\r\n            },\r\n            password:{\r\n                type:'text',\r\n                eleConfig:{\r\n                    type:'text',\r\n                    placeholder:'password'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    min:5,\r\n                    max:25\r\n                },\r\n                valid:false\r\n            }\r\n        },\r\n        isValid:false\r\n    }\r\n\r\n    changeHandler=(e,id)=>{\r\n        let update = updateObject(this.state.formdata[id],{\r\n            value:e.target.value,\r\n            valid: validate(e.target.value,this.state.formdata[id].validation)\r\n        })\r\n        let data=updateObject(this.state.formdata,{\r\n            [id]:update\r\n        })\r\n\r\n                \r\n        let validity=true;\r\n        for(let v in this.state.formdata){\r\n            validity = this.state.formdata[v].valid && validity\r\n        }\r\n        this.setState({formdata:data,isValid:validity})\r\n}\r\n\r\n        submitHandler=(e)=>{\r\n            e.preventDefault()\r\n            let data = {}\r\n\r\n            for(let v in this.state.formdata){\r\n                data[v]= this.state.formdata[v].value\r\n            }\r\n            this.props.signup(data)\r\n        }\r\n\r\n        componentWillUnmount(){\r\n            this.props.reset()\r\n        }\r\n\r\n    render(){\r\n        let form=[]\r\n        for(let data in this.state.formdata){\r\n            form.push({\r\n                key:data,\r\n                label:data,\r\n                config:this.state.formdata[data]\r\n        })\r\n        }\r\n\r\n        let redirect = null \r\n        if(this.props.redirect) redirect = <Navigate to='/' replace />\r\n        let component =(\r\n            <div className={classes.form}>\r\n                {redirect}\r\n              <h1>SIGN UP!</h1>\r\n              <p className={classes.Error}>{this.props.error}</p>\r\n                <form onSubmit={(e)=>this.submitHandler(e)}>\r\n                {form.map(value=>{\r\n                    return (\r\n                        <Input type={value.config.type}\r\n                        key={value.key}\r\n                        eleconfig={value.config.eleConfig}\r\n                        value={value.config.value}\r\n                        label={value.label}\r\n                        change={(e)=>this.changeHandler(e,value.key)} />\r\n                    )\r\n                })}\r\n                <Button type='Success' disable={this.state.isValid} > SIGN UP! </Button>\r\n                </form>\r\n            <p> have a account <span className={classes.btn} onClick={()=>this.props.navigate('/login')} >Log IN!</span> </p>\r\n            </div>\r\n        )\r\n\r\n        if(this.props.loading) component= <Spinner />\r\n        return component\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        error:state.user.error,\r\n        loading:state.user.loading,\r\n        redirect:state.user.redirect\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        signup:(data)=>dispatch(actionCreators.SignUP(data)),\r\n        reset:()=>dispatch(actionCreators.Reset())\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUP);","const updateObject=(prevState,newState)=>{\r\n    return {\r\n        ...prevState,\r\n        ...newState\r\n    }\r\n}\r\nexport default  updateObject;","import validator from 'validator';\r\n\r\nconst validate=(value,rule)=>{\r\n    if(rule.required){\r\n        if(value.trim('')==='') return false\r\n    }\r\n\r\n    if(rule.isemail){\r\n        if(!validator.isEmail(value))\r\n        return false\r\n    }\r\n\r\n    if(value.length < rule.min) return false\r\n    else if(value.length>rule.max) return false\r\n\r\n    return true\r\n}\r\n\r\nexport default validate;\r\n"],"names":["Button","props","className","classes","type","join","disabled","disable","children","Input","input","onChange","change","eleconfig","value","Options","map","option","displayValue","label","SignUP","state","formdata","name","eleConfig","placeholder","validation","required","min","max","valid","email","isemail","age","password","isValid","changeHandler","e","id","update","updateObject","target","validate","data","validity","v","setState","submitHandler","preventDefault","signup","this","reset","form","push","key","config","redirect","to","replace","component","error","onSubmit","onClick","navigate","loading","Component","connect","user","dispatch","actionCreators","prevState","newState","rule","trim","validator","length"],"sourceRoot":""}